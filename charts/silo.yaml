---
# Source: silo/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: silo
  labels:
    helm.sh/chart: silo-0.1.0
    app.kubernetes.io/name: silo
    app.kubernetes.io/instance: silo
    orleans/serviceId: orleans-silo
    orleans/clusterId: silo-orleans-cluster
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    orleans/serviceId: orleans-silo
    orleans/clusterId: silo-orleans-cluster
---
# Source: silo/templates/ClusterVersionCRD.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: clusterversions.orleans.dot.net
spec:
  group: orleans.dot.net
  versions:
    - name: v1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
            type: object
            properties:
                clusterId:
                    type: string
                clusterVersion:
                    type: integer
  scope: Namespaced
  names:
    plural: clusterversions
    singular: clusterversion
    kind: OrleansClusterVersion
    shortNames:
    - ocv
    - oc
---
# Source: silo/templates/SiloEntryCRD.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: silos.orleans.dot.net
spec:
  group: orleans.dot.net
  versions:
    - name: v1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
            required: [ address, port, generation, hostname, status, siloName ]
            type: object
            properties:
                clusterId:
                    type: string
                address:
                    type: string
                port:
                    type: integer
                generation:
                    type: integer
                hostname:
                    type: string
                status:
                    type: string
                proxyPort:
                    type: integer
                siloName:
                    type: string
                suspectingSilos:
                    type: array
                    items:
                        type: string
                suspectingTimes:
                    type: array
                    items:
                        type: string
                startTime:
                    type: string
                iAmAliveTime:
                    type: string
  scope: Namespaced
  names:
    plural: silos
    singular: silo
    kind: OrleansSilo
    shortNames:
    - oso
    - os
---
# Source: silo/templates/orleans-clusterrole.yaml
# creating roles for ressources
apiVersion: rbac.authorization.k8s.io/v1 
kind: ClusterRole
metadata:
  name: orleans-manager
rules:
- apiGroups: ["orleans.dot.net"] 
  resources: ["clusterversions", "silos"] 
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete", "deletecollection"]
---
# Source: silo/templates/hosting-role-binding.yaml
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pod-reader
rules:
- apiGroups: [ "" ]
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
---
# Source: silo/templates/hosting-role-binding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: silo-pod-reader-binding
subjects:
- kind: ServiceAccount
  name: silo
  apiGroup: ''
roleRef:
  kind: Role
  name: pod-reader
  apiGroup: ''
---
# Source: silo/templates/orleans-role-binding.yaml
# granting access for: system:serviceaccount:hypomos-dev:default
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: manage-orleans
subjects:
- kind: ServiceAccount
  name: silo
roleRef:
  kind: ClusterRole
  name: orleans-manager
  apiGroup: rbac.authorization.k8s.io
---
# Source: silo/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: silo
  labels:
    helm.sh/chart: silo-0.1.0
    app.kubernetes.io/name: silo
    app.kubernetes.io/instance: silo
    orleans/serviceId: orleans-silo
    orleans/clusterId: silo-orleans-cluster
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    orleans/serviceId: orleans-silo
    orleans/clusterId: silo-orleans-cluster
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: silo
    app.kubernetes.io/instance: silo
    orleans/serviceId: orleans-silo
    orleans/clusterId: silo-orleans-cluster
---
# Source: silo/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: silo
  labels:
    helm.sh/chart: silo-0.1.0
    app.kubernetes.io/name: silo
    app.kubernetes.io/instance: silo
    orleans/serviceId: orleans-silo
    orleans/clusterId: silo-orleans-cluster
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    orleans/serviceId: orleans-silo
    orleans/clusterId: silo-orleans-cluster
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: silo
      app.kubernetes.io/instance: silo
      orleans/serviceId: orleans-silo
      orleans/clusterId: silo-orleans-cluster
  template:
    metadata:
      labels:
        app.kubernetes.io/name: silo
        app.kubernetes.io/instance: silo
        orleans/serviceId: orleans-silo
        orleans/clusterId: silo-orleans-cluster
    spec:
      serviceAccountName: silo
      securityContext:
        {}
      containers:
        - name: silo
          securityContext:
            {}
          image: "bibolorean/silo:dev"
          imagePullPolicy: IfNotPresent
          env:
            - name: ORLEANS_SERVICE_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['orleans/serviceId']
            - name: ORLEANS_CLUSTER_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['orleans/clusterId']
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: DOTNET_SHUTDOWNTIMEOUTSECONDS
              value: "120"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: silo
              containerPort: 30000
              protocol: TCP
            - name: gateway
              containerPort: 30001
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
