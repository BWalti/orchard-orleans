---
# Source: api/templates/hosting-role-binding.yaml
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: silo-pod-reader-binding
subjects:
- kind: ServiceAccount
  name: default
  apiGroup: ''
roleRef:
  kind: Role
  name: pod-reader
  apiGroup: ''
---
# Source: api/templates/orleans-role-binding.yaml
# granting access for: system:serviceaccount:hypomos-dev:default
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: manage-orleans
subjects:
- kind: ServiceAccount
  name: default
roleRef:
  kind: ClusterRole
  name: orleans-manager
  apiGroup: rbac.authorization.k8s.io
---
# Source: api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: api
  labels:
    helm.sh/chart: api-0.1.0
    app.kubernetes.io/name: api
    app.kubernetes.io/instance: api
    orleans/serviceId: orleans-silo
    orleans/clusterId: silo-orleans-cluster
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    orleans/serviceId: orleans-silo
    orleans/clusterId: silo-orleans-cluster
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: api
    app.kubernetes.io/instance: api
    orleans/serviceId: orleans-silo
    orleans/clusterId: silo-orleans-cluster
---
# Source: api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  labels:
    helm.sh/chart: api-0.1.0
    app.kubernetes.io/name: api
    app.kubernetes.io/instance: api
    orleans/serviceId: orleans-silo
    orleans/clusterId: silo-orleans-cluster
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
    orleans/serviceId: orleans-silo
    orleans/clusterId: silo-orleans-cluster
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: api
      app.kubernetes.io/instance: api
      orleans/serviceId: orleans-silo
      orleans/clusterId: silo-orleans-cluster
  template:
    metadata:
      labels:
        app.kubernetes.io/name: api
        app.kubernetes.io/instance: api
        orleans/serviceId: orleans-silo
        orleans/clusterId: silo-orleans-cluster
    spec:
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: api
          securityContext:
            {}
          image: "bibolorean/multitenantapplication:dev"
          imagePullPolicy: IfNotPresent
          env:
            - name: ORLEANS_SERVICE_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['orleans/serviceId']
            - name: ORLEANS_CLUSTER_ID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['orleans/clusterId']
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: DOTNET_SHUTDOWNTIMEOUTSECONDS
              value: "120"
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
